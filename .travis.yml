language: objective-c

install:
  - curl -o $SSL_CERT_FILE http://curl.haxx.se/ca/cacert.pem
  # Need Berkshelf to resolve dependencies for the local Chef run
  - curl -L https://www.opscode.com/chef/install.sh | sudo bash -s -- -P chefdk
  - chef exec ruby -e "require 'openssl'; puts OpenSSL::Config::DEFAULT_CONFIG_FILE"
  - cat `chef exec ruby -e "require 'openssl'; puts OpenSSL::Config::DEFAULT_CONFIG_FILE"`
  - chef exec berks vendor /tmp/kitchen/cookbooks -d
  # Need to delete ChefDK so the local run actually tests something
  - sudo pkgutil --forget com.getchef.pkg.chefdk
  - sudo rm -rf /opt/chefdk
  # Use regular Chef to reinstall ChefDK locally
  - curl -L https://www.opscode.com/chef/install.sh | sudo bash
  - sudo chef-client -z -c test/client.rb -j test/dna.json
  # Then the build can continue on with ChefDK
  - chef exec bundle install --without=development

before_script:
  # Pending ENV support in Kitchen's Rake tasks and not just the CLI
  - cp .kitchen.travis.yml .kitchen.local.yml
  - echo -e $DIGITALOCEAN_SSH_KEY_BODY > ~/.ssh/id_rsa

script:
  - chef exec bundle exec rspec --default-path test/integration/global_shell_init/serverspec -f d && chef exec rake

after_script:
  - chef exec bundle exec kitchen destroy

env:
  global:
    # - KITCHEN_LOCAL_YAML=.kitchen.travis.yml
    - SSL_CERT_FILE=/tmp/cacert.pem
